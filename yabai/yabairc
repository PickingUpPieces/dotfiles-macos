#!/usr/bin/env zsh

# ====== Startup ===============================
# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password

sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"


# ====== Variables =============================

# Check for Notch on MacBook
if [[ $(uname -m) == 'arm64' ]]; then
    gaps_top="7" # menu bar is at the top; Apple Menu Bar is 25px
else
    gaps_top="32" # for none notch
fi

gaps_bottom="7"
gaps_left="7"
gaps_right="7"
gaps_inner="7"

normal_border_color="010101"
focused_border_color="808080"
preselect_border_color="2d74da"

# ====== Tiling settings =======================

yabai -m config layout                      bsp
yabai -m config external_bar                all:32:0
yabai -m config top_padding                 "${gaps_top}"
yabai -m config bottom_padding              "${gaps_bottom}"
yabai -m config left_padding                "${gaps_left}"
yabai -m config right_padding               "${gaps_right}"
yabai -m config window_gap                  "${gaps_inner}"

yabai -m config mouse_follows_focus         on
yabai -m config focus_follows_mouse         off

yabai -m config mouse_modifier              fn
yabai -m config mouse_action1               move
yabai -m config mouse_action2               resize

yabai -m config window_topmost              on
yabai -m config window_opacity              on
yabai -m config window_shadow               float # More Performance

yabai -m config active_window_opacity       1.0
yabai -m config normal_window_opacity       0.95
yabai -m config split_ratio                 0.5
yabai -m config auto_balance                on
yabai -m config window_zoom_persist         off
    
# Not working very smoothly
#yabai -m config window_animation_duration   0.22

# ====== Border settings =======================

yabai -m config window_border               on # Not used because of Monterey round corners
yabai -m config window_border_width         2
yabai -m config window_border_hidpi         on
yabai -m config window_border_blur          off
yabai -m config active_window_border_color  "0xE0${focused_border_color}"
#yabai -m config insert_window_border_color  "0xE0${preselect_border_color}"
yabai -m config normal_window_border_color  "0x00${normal_border_color}"
#yabai -m config insert_feedback_color       "0xff9dd274"

# ====== List of rules =========================

# Don't manage Preferences
yabai -m rule --add title='Preferences$' manage=off layer=above grid=3:3:1:1:1:1 border=off
yabai -m rule --add title='Force Quit Applications$' manage=off layer=above grid=3:3:1:1:1:1 border=off
yabai -m rule --add app='^System Settings$' manage=off layer=above grid=4:3:1:1:1:2 border=off
yabai -m rule --add app="^System Information" manage=off border=off

# Other Stuff
yabai -m rule --add label="Activity Monitor" app="^Activity Monitor$" manage=off border=off
yabai -m rule --add label="KeePassXC" app="^KeePassXC$" manage=off border=off
yabai -m rule --add label="Calculator" app="^Calculator$" manage=off border=off
yabai -m rule --add label="Dictionary" app="^Dictionary$" manage=off border=off
yabai -m rule --add label="mpv" app="^mpv$" manage=off border=off
yabai -m rule --add label="The Unarchiver" app="^The Unarchiver$" manage=off border=off
yabai -m rule --add label="Transmission" app="^Transmission$" manage=off border=off
yabai -m rule --add label="Safari" app="^Safari$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
yabai -m rule --add app="^Stats" manage=off border=off
yabai -m rule --add app="^AirDrop$" manage=off border=off
yabai -m rule --add app="^Tunnelblick" manage=off border=off
yabai -m rule --add app="^Spotlight$" layer=above manage=off border=off

# Firefox
yabai -m rule --add app="^Firefox$" title=".*Launch Application.*" manage=off  border=off
yabai -m rule --add app="^Firefox$" title=".*Opening.*" manage=off border=off 
yabai -m rule --add app="^Firefox$" title="Picture-in-Picture" manage=off  border=off

yabai -m rule --add label="Calendar" app="^Calendar$" manage=off grid=6:6:1:1:4:4 border=off
yabai -m rule --add label="Spotify" app="^Spotify$" manage=off grid=6:6:1:1:4:4 border=off
yabai -m rule --add label="Messages" app="^Messages$" manage=off grid=6:6:1:1:4:4 border=off

# Open finder always on top, since otherwise it stays hidden behind applications (Seems like it's finder specific)
yabai -m rule --add label="Finderall" app="^Finder$" manage=off layer=above grid=6:6:1:1:4:4 border=off
yabai -m rule --add label="Finder" app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref|About Finder)" manage=off layer=above  border=off

# Rule resizing grid windows when moving to bigger screen
yabai -m signal --add event=window_focused app="Spotify|Calendar|Messages|Finderall" action="yabai -m window $YABAI_WINDOW_ID --grid 6:6:1:1:4:4"

# Rules for specific space assignment
#yabai -m rule --add app="^Mail$" space=3



#######################	
# Cleanup empty spaces
#######################	
yabai -m signal --add event=space_changed action="sh ~/.config/scripts/destroy_empty_space.sh"



#######################	
# Scratchpad
#######################	
function minimize_scratchpad_apps {
    # FIXME: Add here the application names of the desired scratchpad applications
    SCRATCHPAD_APPS=(Slack Bitwarden TickTick) 

    sh ~/.config/scripts/minimize_scratchpad.sh "${SCRATCHPAD_APPS[@]}"
}

# --grid needed when application starts
yabai -m rule --add label="Bitwarden" app="^Bitwarden$" manage=off grid=6:6:1:1:4:4 border=off
yabai -m rule --add label="TickTick" app="^TickTick$" title="TickTick" manage=off grid=6:6:1:1:4:4 border=off
yabai -m rule --add label="TickTick" app="^TickTick$" manage=off border=off # For other TickTick sub-windows 
yabai -m rule --add label="Slack" app="^Slack$" manage=off grid=6:6:1:1:4:4 border=off

# Minimize Scratchpad windows, when focus is changed
yabai -m signal --add event=window_focused action="${functions[minimize_scratchpad_apps]}"
yabai -m signal --add event=space_changed action="${functions[minimize_scratchpad_apps]}"
yabai -m signal --add event=display_changed action="${functions[minimize_scratchpad_apps]}"



#######################	
# Focus
#######################	
# The following signals are for ensuring that the correct windows/spaces are focused after e.g. another window is closed
# https://github.com/koekeishiya/yabai/issues/719
# https://github.com/koekeishiya/yabai/issues/485
# https://github.com/koekeishiya/yabai/issues/878
# https://github.com/koekeishiya/yabai/issues/1012
# https://github.com/koekeishiya/yabai/issues/475

# Returns the recent window id for the current focused space, but ignores minimized/hidden windows
function focus_recent_window {
    window_id=$(yabai -m query --windows --space | jq 'map(select(."is-minimized" == false and ."is-hidden" == false)) | .[0].id')
    # Check for $window_id == null; then just focus the space
    if [[ "$window_id" != 'null' ]]; then
        yabai -m window --focus $window_id
    fi
}

# focus window after active space/display changes 
# IMPORTANT: space_changed isn't triggered when the display is changed
#yabai -m signal --add event=space_changed action="sleep 0.1 && ${functions[focus_recent_window]}"
#yabai -m signal --add event=display_changed action="sleep 0.1 && ${functions[focus_recent_window]}"

# Spotlight triggering this event as well which focuses wrong window
# Add negative lookup regex for "Spotlight"
# Negative lookup generator: http://www.formauri.es/personal/pgimeno/misc/non-match-regex
yabai -m signal --add event=window_destroyed app="^([^S]|S(S|p(S|o(S|t(S|l(S|i(S|g(S|hS)))))))*([^Sp]|p([^So]|o([^St]|t([^Sl]|l([^Si]|i([^Sg]|g([^Sh]|h[^St]))))))))*(S(S|p(S|o(S|t(S|l(S|i(S|g(S|hS)))))))*(p(o?|ot(l?|li(g?|gh))))?)?$" action="${functions[focus_recent_window]}"
yabai -m signal --add event=application_terminated app="^([^S]|S(S|p(S|o(S|t(S|l(S|i(S|g(S|hS)))))))*([^Sp]|p([^So]|o([^St]|t([^Sl]|l([^Si]|i([^Sg]|g([^Sh]|h[^St]))))))))*(S(S|p(S|o(S|t(S|l(S|i(S|g(S|hS)))))))*(p(o?|ot(l?|li(g?|gh))))?)?$" action="${functions[focus_recent_window]}"



#######################	
# Anti-swoosh
#######################	
# Sleep delay so auto-swoosh by macOS is not the last space AND due to asynchronous behaviour of signals
yabai -m signal --add event=space_changed action="sleep 0.4 && yabai -m query --spaces --space | jq '.index' | xargs -I % ruby ~/.config/scripts/space_focus.rb write %"
yabai -m signal --add event=display_changed action="sleep 0.4 && yabai -m query --spaces --space | jq '.index' | xargs -I % ruby ~/.config/scripts/space_focus.rb write %"

yabai -m signal --add event=application_terminated app="^([^S]|S(S|p(S|o(S|t(S|l(S|i(S|g(S|hS)))))))*([^Sp]|p([^So]|o([^St]|t([^Sl]|l([^Si]|i([^Sg]|g([^Sh]|h[^St]))))))))*(S(S|p(S|o(S|t(S|l(S|i(S|g(S|hS)))))))*(p(o?|ot(l?|li(g?|gh))))?)?$" action="sleep 0.4 && yabai -m space --focus \$(ruby ~/.config/scripts/space_focus.rb read)"
yabai -m signal --add event=window_destroyed app="^([^S]|S(S|p(S|o(S|t(S|l(S|i(S|g(S|hS)))))))*([^Sp]|p([^So]|o([^St]|t([^Sl]|l([^Si]|i([^Sg]|g([^Sh]|h[^St]))))))))*(S(S|p(S|o(S|t(S|l(S|i(S|g(S|hS)))))))*(p(o?|ot(l?|li(g?|gh))))?)?$" action="sleep 0.4 && yabai -m space --focus \$(ruby ~/.config/scripts/space_focus.rb read)"



#######################	
# Sketchybar
#######################	
yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
yabai -m signal --add event=window_created action="sketchybar --trigger windows_on_spaces"
yabai -m signal --add event=window_destroyed action="sketchybar --trigger windows_on_spaces"
yabai -m signal --add event=space_changed action="sketchybar --trigger windows_on_spaces"
